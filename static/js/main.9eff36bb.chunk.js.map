{"version":3,"sources":["serviceWorker.js","helpers/localization.js","helpers/actions.js","helpers/constants.js","components/Settings.js","components/SparkCalculator.js","components/ExperienceCalculator.js","components/App.js","index.js","helpers/dataMigration.js","reducers/index.js","icons/info-filled.svg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","localization","LocalizedStrings","en","english","japanese","SparkCalc","ExpRpCalc","crystals","singleTickets","grandTickets","totalRolls","percentage","levelFrom","levelTo","toNextLevel","bonusExp","bonusExpInfo","weaponSummon","character","rank","sameType","totalExperience","archangelItems","vessels","cantDowngrade","suggestionsWelcomed","jp","SET_SPARK_DATA","English","Japanese","ExperienceTypes","Weapon","Character","Rank","ExperienceTables","_ExperienceTables","Object","defineProperty","Settings","handleCheckboxChange","_this$props","_this","props","changeLanguage","newLanguage","languageCode","ReactGA","event","category","action","label","react_default","a","createElement","Fragment","className","strings","type","id","onChange","this","checked","Alert","variant","React","Component","connect","dispatch","language","payload","SparkCalculator","selectField","e","target","select","handleChange","setState","name","value","recalculateRolls","_this$state","parseInt","Row","Col","xs","md","lg","htmlFor","min","step","max","defaultValue","onClick","disabled","ExperienceCalculator","expType","showError","maxLevel","length","experienceTable","recalculateExperience","_this$state2","getRequiredItemsCount","itemExperience","Math","ceil","floor","archangelExp","currentExperience","handleInputChange","handleCheckbox","hidden","OverlayTrigger","overlay","Tooltip","src","infoIcon","alt","width","show","App","handleTabSelect","tabKey","modalview","Tabs","defaultActiveKey","onSelect","Tab","eventKey","title","components_SparkCalculator","components_ExperienceCalculator","components_Settings","GithubCorner_default","href","bannerColor","rel","persistedState","localStorage","getItem","JSON","parse","newState","clear","getDefaultState","store","createStore","arguments","undefined","objectSpread","setLanguage","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","app","es","components_App","ReactDOM","render","document","getElementById","initialize","pageview","pathname","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9eff36bb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import LocalizedStrings from 'react-localization'\r\n\r\nconst english = 'English'\r\nconst japanese = '日本語'\r\n\r\nexport default new LocalizedStrings({\r\n  en: {\r\n    english,\r\n    japanese,\r\n    SparkCalc: 'Spark Calc',\r\n    ExpRpCalc: 'RP&EXP Calc',\r\n    crystals: 'Crystals:',\r\n    singleTickets: 'Single tickets:',\r\n    grandTickets: '10x tickets:',\r\n    totalRolls: 'Total rolls:',\r\n    percentage: 'Percentage:',\r\n    levelFrom: 'From:',\r\n    levelTo: 'To:',\r\n    toNextLevel: 'To next level:',\r\n    bonusExp: 'Bonus Exp (%):',\r\n    bonusExpInfo: 'Usually comes from Wonders and Elemental Skills.',\r\n    weaponSummon: 'Weapon / Summon',\r\n    character: 'Character',\r\n    rank: 'Rank',\r\n    sameType: 'Same type',\r\n    totalExperience: 'Total Experience:',\r\n    archangelItems: 'Archangel Items:',\r\n    vessels: 'Vessels:',\r\n    error: 'Error',\r\n    cantDowngrade: 'You cannot downgrade weapons/summons/characters.',\r\n    suggestionsWelcomed: 'If you have any suggestions or ideas, contact me on Discord: IAmVisco#7099'\r\n  },\r\n  jp: {\r\n    english,\r\n    japanese,\r\n    SparkCalc: '蒼光の御印の計算',\r\n    ExpRpCalc: 'RPとEXPの計算',\r\n    crystals: '宝晶石:',\r\n    singleTickets: 'チケット:',\r\n    grandTickets: '10連チケット:',\r\n    totalRolls: '合計:',\r\n    percentage: '%:',\r\n    levelFrom: 'から:',\r\n    levelTo: 'まで:',\r\n    toNextLevel: '次のLvまで:',\r\n    bonusExp: ' ボーナスEXP (%):',\r\n    bonusExpInfo: '普通に大事なものと属性強化スキルから',\r\n    weaponSummon: '武器/召喚石',\r\n    character: 'キャラ',\r\n    rank: 'Rank',\r\n    sameType: '同じ武器の種類',\r\n    totalExperience: 'EXPの合計:',\r\n    archangelItems: 'アークエンジェル:',\r\n    vessels: '杯:',\r\n    error: 'エラー',\r\n    cantDowngrade: '武器/召喚石/キャラを下がらない',\r\n    suggestionsWelcomed: '何か考えと助言があれば私にDiscord：IAmVisco＃7099で連絡してください'\r\n  }\r\n})\r\n","export const SET_SPARK_DATA = 'SET_SPARK_DATA'\r\nexport const SET_LANGUAGE = 'SET_LANGUAGE'\r\n","export const English = 'en'\r\nexport const Japanese = 'jp'\r\nexport const ExperienceTypes = {\r\n  Weapon: 'weapon',\r\n  Character: 'character',\r\n  Rank: 'rank'\r\n}\r\nexport const ExperienceTables = {\r\n  [ExperienceTypes.Weapon]: [\r\n    0, 0, 10, 22, 36, 52, 70, 90, 112, 136, 162, 190, 220, 255, 295, 340, 390, 450, 520, 600, 690, 790, 910, 1050,\r\n    1210, 1390, 1590, 1810, 2050, 2310, 2590, 2890, 3210, 3550, 3910, 4290, 4690, 5110, 5550, 6010, 6490, 6990, 7510,\r\n    8050, 8610, 9190, 9790, 10410, 11050, 11710, 12390, 13090, 13810, 14550, 15310, 16090, 16890, 17710, 18550, 19410,\r\n    20290, 21190, 22110, 23050, 24010, 24990, 25990, 27010, 28050, 29110, 30190, 31290, 32410, 33550, 34710, 35890,\r\n    37090, 38310, 39550, 40810, 42090, 43990, 44710, 46050, 47410, 48790, 50190, 51610, 53050, 54510, 55990, 57490,\r\n    59010, 60550, 62110, 63690, 65290, 66910, 68550, 70210, 71890, 77090, 82490, 88090, 93890, 99890, 106090, 112490,\r\n    119090, 125890, 132890, 140090, 147490, 155090, 162890, 170890, 179090, 187490, 196090, 204890, 213890, 223190,\r\n    232790, 242690, 252890, 263490, 274490, 285990, 297990, 310490, 323590, 337290, 351590, 366490, 382090, 398390,\r\n    415390, 433090, 451590, 470890, 490990, 511990, 533990, 556990, 580990, 605990, 631990, 658990, 686990, 715990,\r\n    745990, 775990, 805990, 835990, 865990, 895990, 925990, 955990, 985990, 1015990, 1045990, 1075990, 1105990, 1135990,\r\n    1165990, 1195990, 1225990, 1255990, 1285990, 1315990, 1345990, 1375990, 1405990, 1435990, 1465990, 1495990, 1525990,\r\n    1555990, 1585990, 1615990, 1645990, 1675990, 1705990, 1735990, 1765990, 1795990, 1825990, 1855990, 1885990, 1915990,\r\n    1945990, 1975990, 2005990, 2035990, 2065990, 2095990, 2125990, 2155990, 2185990, 2215990, 2245990\r\n  ],\r\n  [ExperienceTypes.Character]: [\r\n    0, 0, 30, 100, 200, 320, 460, 620, 800, 1000, 1220, 1460, 1720, 2000, 2300, 2650, 3050, 3500, 4000, 4550, 5150,\r\n    5800, 6500, 7300, 8200, 9200, 10300, 11500, 12800, 14200, 15700, 17300, 19000, 20800, 22700, 24700, 26800, 29000,\r\n    31400, 34000, 36800, 39800, 43000, 46400, 50000, 53800, 57800, 62000, 66400, 71000, 75800, 80800, 86050, 91550,\r\n    97300, 103300, 109550, 116050, 122800, 129800, 137050, 144550, 152350, 160450, 168850, 177550, 186550, 196050,\r\n    206050, 216550, 227550, 239050, 251050, 263550, 276550, 290050, 304050, 318550, 333550, 349050, 365050, 415050,\r\n    435050, 456050, 478050, 501050, 525050, 550050, 576050, 603050, 703050, 853050, 1053050, 1303050, 1603050, 1953050,\r\n    2353050, 2803050, 3303050, 3803050, 4803050\r\n  ],\r\n  [ExperienceTypes.Rank]: [\r\n    0, 0, 50, 200, 500, 900, 1500, 2200, 2900, 3800, 4900, 6500, 8000, 9600, 11500, 13500, 15600, 17800, 20100, 22950,\r\n    26500, 30450, 34450, 38900, 43850, 49350, 55450, 62200, 69650, 77850, 86850, 96700, 107450, 119150, 131850,\r\n    145600, 160450, 176450, 193650, 212100, 231850, 252950, 275450, 299400, 324850, 351850, 380450, 410700, 442650,\r\n    476350, 511850, 549200, 588450, 629650, 672850, 718100, 765450, 814950, 866650, 920600, 976850, 1035450, 1096450,\r\n    1159900, 1225850, 1294350, 1365450, 1439200, 1515650, 1594850, 1676850, 1761700, 1849450, 1940150, 2033850,\r\n    2130600, 2230450, 2333450, 2439650, 2549100, 2661850, 2777950, 2897450, 3020400, 3146850, 3276850, 3410450,\r\n    3547700, 3688650, 3833350, 3981850, 4134200, 4290450, 4450650, 4614850, 4783100, 4955450, 5131950, 5312650,\r\n    5497600, 5686850, 5936850, 6197000, 6467400, 6748300, 7039900, 7342400, 7656000, 7980900, 8317300, 8665400,\r\n    9025400, 9397500, 9781900, 10178800, 10588400, 11010900, 11446500, 11895400, 12357800, 12833900, 13323900,\r\n    13828000, 14346400, 14879300, 15426900, 15989400, 16567000, 17159900, 17768300, 18392400, 19032400, 19688600,\r\n    20361300, 21050800, 21757400, 22481400, 23223100, 23982800, 24760800, 25557400, 26372900, 27207600, 28061800,\r\n    28935800, 29829800, 30744200, 31679400, 32635800, 33613800, 34613800, 35636300, 36682800, 37754800, 38853800,\r\n    39981800, 41141800, 42336800, 43571800, 44851800, 46181800, 47571800, 49031800, 50571800, 52201800, 53931800,\r\n    55781800, 57771800, 59921800, 62251800, 64781800, 67531800, 70541800, 73821800, 77371800, 81276800, 85197800,\r\n    89136300, 93092800, 97069300, 101067800, 105091300, 109142800, 113227300, 117349800, 121515300, 125733800,\r\n    130015300, 134369800, 138807300, 143337800, 147981300, 152757800, 157687300, 162789800, 168085300, 173598800,\r\n    179355300, 185379800, 191697300, 198332800, 204968300, 211603800, 218239300, 224874800, 231510300, 238145800,\r\n    244781300, 251416800, 258052300, 264687800, 271323300, 277958800, 284594300, 291229800, 297865300, 304500800,\r\n    311136300, 317771800, 324407300, 331042800, 337678300, 344313800, 350949300, 357584800, 364220300, 370855800,\r\n    377516440, 384202310, 390913500, 397650100, 404412200, 411199890, 418013260, 424852400, 431717400, 438608350,\r\n    445525340, 452468460, 459437800, 466433450, 473455500, 480504040, 487579160, 494680950, 501809500, 508964900,\r\n    516147240, 523356610, 530593100, 537856800\r\n  ]\r\n}\r\n","import React from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { connect } from 'react-redux'\r\nimport { Alert } from 'react-bootstrap'\r\nimport '../styles/Settings.scss'\r\nimport strings from '../helpers/localization'\r\nimport { SET_LANGUAGE } from '../helpers/actions'\r\nimport { English, Japanese } from '../helpers/constants'\r\n\r\nclass Settings extends React.Component {\r\n  handleCheckboxChange = () => {\r\n    const { changeLanguage, languageCode } = this.props\r\n    const newLanguage = languageCode === English ? Japanese : English\r\n\r\n    changeLanguage(newLanguage)\r\n    ReactGA.event({\r\n      category: 'Settings change',\r\n      action: 'Language change',\r\n      label: newLanguage\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <label className=\"language-label\">{strings.english}&nbsp;</label>\r\n        <label className=\"switch\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"languageSwitch\"\r\n            onChange={this.handleCheckboxChange}\r\n            checked={this.props.languageCode === Japanese} />\r\n          <span className=\"slider\" />\r\n        </label>\r\n        <label className=\"language-label\">&nbsp;{strings.japanese}</label>\r\n        <Alert variant=\"info\" className=\"mb-0 mt-3\">\r\n          {strings.suggestionsWelcomed}\r\n        </Alert>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({\r\n  languageCode: state.languageCode\r\n}), (dispatch) => ({\r\n  changeLanguage: (language) => dispatch({ type: SET_LANGUAGE, payload: language })\r\n}))(Settings)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport strings from '../helpers/localization'\r\nimport { SET_SPARK_DATA } from '../helpers/actions'\r\n\r\nclass SparkCalculator extends React.Component {\r\n  state = {\r\n    crystals: 0,\r\n    singleTickets: 0,\r\n    grandTickets: 0\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      crystals: this.props.crystals,\r\n      singleTickets: this.props.singleTickets,\r\n      grandTickets: this.props.grandTickets,\r\n    }, this.recalculateRolls)\r\n  }\r\n\r\n  selectField = (e) => {\r\n    e.target.select()\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.props.dispatch({\r\n        type: SET_SPARK_DATA,\r\n        payload: {\r\n          crystals: this.state.crystals,\r\n          singleTickets: this.state.singleTickets,\r\n          grandTickets: this.state.grandTickets\r\n        }\r\n      })\r\n      this.recalculateRolls()\r\n    })\r\n  }\r\n\r\n  recalculateRolls = () => {\r\n    const { crystals, singleTickets, grandTickets } = this.state\r\n    const totalRolls = parseInt(crystals / 300)\r\n      + parseInt(singleTickets)\r\n      + parseInt(grandTickets * 10)\r\n    const percentage = ~~(totalRolls / 300 * 100) + '%'\r\n    this.setState({ totalRolls, percentage })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Row>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n            <label className=\"no-wrap\" htmlFor=\"crystals\">{strings.crystals}</label>\r\n            <input\r\n              min=\"0\"\r\n              step=\"100\"\r\n              max=\"999999\"\r\n              type=\"number\"\r\n              className=\"input-sm form-control\"\r\n              id=\"crystals\"\r\n              name=\"crystals\"\r\n              defaultValue={this.state.crystals}\r\n              onClick={this.selectField}\r\n              onChange={this.handleChange} />\r\n          </Col>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n            <label className=\"no-wrap\" htmlFor=\"singleTickets\">{strings.singleTickets}</label>\r\n            <input\r\n              min=\"0\"\r\n              max=\"9999\"\r\n              type=\"number\"\r\n              className=\"input-sm form-control\"\r\n              id=\"singleTickets\"\r\n              name=\"singleTickets\"\r\n              defaultValue={this.state.singleTickets}\r\n              onClick={this.selectField}\r\n              onChange={this.handleChange} />\r\n          </Col>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n            <label className=\"no-wrap\" htmlFor=\"grandTickets\">{strings.grandTickets}</label>\r\n            <input\r\n              min=\"0\"\r\n              max=\"999\"\r\n              type=\"number\"\r\n              className=\"input-sm form-control\"\r\n              id=\"grandTickets\"\r\n              name=\"grandTickets\"\r\n              defaultValue={this.state.grandTickets}\r\n              onClick={this.selectField}\r\n              onChange={this.handleChange} />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"pt-2\">\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n            <label className=\"no-wrap\" htmlFor=\"totalRolls\">{strings.totalRolls}</label>\r\n            <input\r\n              disabled\r\n              type=\"text\"\r\n              className=\"input-sm form-control\"\r\n              id=\"totalRolls\"\r\n              name=\"totalRolls\"\r\n              defaultValue={this.state.totalRolls}\r\n              onClick={this.selectField}\r\n              onChange={this.handleChange} />\r\n          </Col>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n            <label className=\"no-wrap\" htmlFor=\"percentage\">{strings.percentage}</label>\r\n            <input\r\n              disabled\r\n              type=\"text\"\r\n              className=\"input-sm form-control\"\r\n              id=\"percentage\"\r\n              name=\"percentage\"\r\n              defaultValue={this.state.percentage}\r\n              onClick={this.selectField}\r\n              onChange={this.handleChange} />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({\r\n  crystals: state.crystals,\r\n  singleTickets: state.singleTickets,\r\n  grandTickets: state.grandTickets\r\n}))(SparkCalculator)\r\n","import React from 'react'\r\nimport { Alert, Col, OverlayTrigger, Row, Tooltip } from 'react-bootstrap'\r\nimport '../styles/ExperienceCalculator.scss'\r\nimport strings from '../helpers/localization'\r\nimport infoIcon from '../icons/info-filled.svg'\r\nimport { ExperienceTables, ExperienceTypes } from '../helpers/constants'\r\n\r\nclass ExperienceCalculator extends React.Component {\r\n  state = {\r\n    expType: ExperienceTypes.Weapon,\r\n    bonusExp: 10,\r\n    sameType: false,\r\n    totalExperience: 0,\r\n    archangelItems: 0,\r\n    vessels: 0,\r\n    levelTo: 40,\r\n    levelFrom: 1,\r\n    toNextLevel: 0,\r\n    showError: false,\r\n    maxLevel: ExperienceTables[ExperienceTypes.Weapon].length - 1,\r\n    experienceTable: ExperienceTables[ExperienceTypes.Weapon]\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.recalculateExperience()\r\n  }\r\n\r\n  recalculateExperience = () => {\r\n    const { levelFrom, levelTo } = this.state\r\n    const maxLevel = ExperienceTables[this.state.expType].length - 1\r\n    \r\n    this.setState({\r\n      experienceTable: ExperienceTables[this.state.expType],\r\n      levelFrom: levelFrom > maxLevel ? maxLevel : levelFrom,\r\n      levelTo: levelTo > maxLevel ? maxLevel : levelTo,\r\n      maxLevel\r\n    }, () => {\r\n      const { bonusExp, experienceTable, expType, levelFrom, levelTo, sameType, toNextLevel } = this.state\r\n      const getRequiredItemsCount = (totalExperience, itemExperience) => {\r\n        return Math.ceil(totalExperience / (itemExperience + Math.floor(itemExperience * (bonusExp / 100))))\r\n      }\r\n\r\n      if (levelFrom > levelTo) {\r\n        this.setState({ showError: true })\r\n        return\r\n      }\r\n\r\n      this.setState({ showError: false })\r\n      const archangelExp = sameType ? 750 : 500\r\n      const vesselExp = 30000\r\n      let currentExperience = 0\r\n      if (toNextLevel > 0) {\r\n        currentExperience = (experienceTable[levelFrom + 1] - experienceTable[levelFrom]) - toNextLevel\r\n      }\r\n      const totalExperience = experienceTable[levelTo] - experienceTable[levelFrom] - currentExperience\r\n      if (expType !== ExperienceTypes.Rank) {\r\n        const vessels = getRequiredItemsCount(totalExperience, vesselExp)\r\n        const archangelItems = getRequiredItemsCount(totalExperience, archangelExp)\r\n        this.setState({ vessels, archangelItems })\r\n      }\r\n      this.setState({ totalExperience })\r\n    })\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ [e.target.name]: parseInt(e.target.value) || '' }, () => {\r\n      this.recalculateExperience()\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      this.recalculateExperience()\r\n    })\r\n  }\r\n\r\n  handleCheckbox = (e) => {\r\n    this.setState({ [e.target.name]: e.target.checked }, () => {\r\n      this.recalculateExperience()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Row>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n            <label className=\"no-wrap\" htmlFor=\"levelFrom\">{strings.levelFrom}</label>\r\n            <input\r\n              min=\"0\"\r\n              max={this.state.maxLevel}\r\n              type=\"number\"\r\n              className=\"input-sm form-control\"\r\n              id=\"levelFrom\"\r\n              name=\"levelFrom\"\r\n              value={this.state.levelFrom}\r\n              onChange={this.handleInputChange} />\r\n          </Col>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n            <label className=\"no-wrap\" htmlFor=\"levelTo\">{strings.levelTo}</label>\r\n            <input\r\n              min=\"0\"\r\n              max={this.state.maxLevel}\r\n              type=\"number\"\r\n              className=\"input-sm form-control\"\r\n              id=\"levelTo\"\r\n              name=\"levelTo\"\r\n              value={this.state.levelTo}\r\n              onChange={this.handleInputChange} />\r\n          </Col>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n            <label className=\"no-wrap\" htmlFor=\"toNextLevel\">{strings.toNextLevel}</label>\r\n            <input\r\n              min=\"0\"\r\n              step=\"100\"\r\n              type=\"number\"\r\n              className=\"input-sm form-control\"\r\n              id=\"toNextLevel\"\r\n              name=\"toNextLevel\"\r\n              value={this.state.toNextLevel}\r\n              onChange={this.handleInputChange} />\r\n          </Col>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\" className=\"will-hide tooltip-col\"\r\n            hidden={this.state.expType === ExperienceTypes.Rank}>\r\n            <OverlayTrigger overlay={<Tooltip>{strings.bonusExpInfo}</Tooltip>}>\r\n              <label className=\"no-wrap\" htmlFor=\"bonusExp\">\r\n                <img src={infoIcon} alt=\"info icon\" width=\"16\" /> {strings.bonusExp}\r\n              </label>\r\n            </OverlayTrigger>\r\n            <input\r\n              min=\"0\"\r\n              type=\"number\"\r\n              className=\"input-sm form-control\"\r\n              id=\"bonusExp\"\r\n              name=\"bonusExp\"\r\n              value={this.state.bonusExp}\r\n              onChange={this.handleInputChange} />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <div className=\"radio-tile-group\">\r\n            <div className=\"input-container\">\r\n              <input\r\n                id=\"weaponExperience\"\r\n                type=\"radio\"\r\n                name=\"expType\"\r\n                className=\"radio-button\"\r\n                value={ExperienceTypes.Weapon}\r\n                checked={this.state.expType === ExperienceTypes.Weapon}\r\n                onChange={this.handleChange} />\r\n              <div className=\"radio-tile\">\r\n                <label\r\n                  htmlFor=\"weaponExperience\"\r\n                  className=\"radio-tile-label\">\r\n                  {strings.weaponSummon}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <input\r\n                id=\"characterExperience\"\r\n                type=\"radio\"\r\n                name=\"expType\"\r\n                className=\"radio-button\"\r\n                value={ExperienceTypes.Character}\r\n                checked={this.state.expType === ExperienceTypes.Character}\r\n                onChange={this.handleChange} />\r\n              <div className=\"radio-tile\">\r\n                <label\r\n                  htmlFor=\"characterExperience\"\r\n                  className=\"radio-tile-label\">\r\n                  {strings.character}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-container\">\r\n              <input\r\n                id=\"rankExperience\"\r\n                type=\"radio\"\r\n                name=\"expType\"\r\n                className=\"radio-button\"\r\n                value={ExperienceTypes.Rank}\r\n                checked={this.state.expType === ExperienceTypes.Rank}\r\n                onChange={this.handleChange} />\r\n              <div className=\"radio-tile\">\r\n                <label\r\n                  htmlFor=\"rankExperience\"\r\n                  className=\"radio-tile-label\">\r\n                  {strings.rank}\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Col\r\n            md=\"2\"\r\n            className=\"align-items-center checkbox-col will-hide\"\r\n            hidden={this.state.expType === ExperienceTypes.Rank}>\r\n            <label htmlFor=\"sameType\" className=\"m-0 pr-2 no-wrap\">{strings.sameType}</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"sameType\"\r\n              name=\"sameType\"\r\n              className=\"checkbox-input\"\r\n              checked={this.state.sameType}\r\n              onChange={this.handleCheckbox} />\r\n            <label htmlFor=\"sameType\" className=\"checkbox-label mb-0\">\r\n              <span className=\"checkbox\" />\r\n            </label>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\">\r\n            <label className=\"no-wrap\" htmlFor=\"totalExperience\">{strings.totalExperience}</label>\r\n            <input\r\n              disabled\r\n              type=\"number\"\r\n              id=\"totalExperience\"\r\n              name=\"totalExperience\"\r\n              className=\"input-sm form-control\"\r\n              value={this.state.totalExperience}\r\n              onChange={this.handleChange} />\r\n          </Col>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\" className=\"will-hide\" hidden={this.state.expType === ExperienceTypes.Rank}>\r\n            <label className=\"no-wrap\" htmlFor=\"archangelItems\">{strings.archangelItems}</label>\r\n            <input\r\n              disabled\r\n              type=\"number\"\r\n              id=\"archangelItems\"\r\n              name=\"archangelItems\"\r\n              className=\"input-sm form-control\"\r\n              value={this.state.archangelItems}\r\n              onChange={this.handleChange} />\r\n          </Col>\r\n          <Col xs=\"4\" md=\"3\" lg=\"2\" className=\"will-hide\" hidden={this.state.expType === ExperienceTypes.Rank}>\r\n            <label className=\"no-wrap\" htmlFor=\"vessels\">{strings.vessels}</label>\r\n            <input\r\n              disabled\r\n              type=\"number\"\r\n              id=\"vessels\"\r\n              name=\"vessels\"\r\n              value={this.state.vessels}\r\n              className=\"input-sm form-control\"\r\n              onChange={this.handleChange} />\r\n          </Col>\r\n        </Row>\r\n        <Alert variant=\"danger\" className=\"mb-0 mt-3\" show={this.state.showError}>\r\n          <strong className=\"align-middle\">{strings.error}: </strong><span\r\n            className=\"align-middle\">{strings.cantDowngrade}</span>\r\n        </Alert>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExperienceCalculator\r\n","import React from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { connect } from 'react-redux'\r\nimport { Tab, Tabs } from 'react-bootstrap'\r\nimport GithubCorner from 'react-github-corner'\r\nimport '../styles/App.scss'\r\nimport Settings from './Settings'\r\nimport strings from '../helpers/localization'\r\nimport SparkCalculator from './SparkCalculator'\r\nimport { Japanese } from '../helpers/constants'\r\nimport { SET_LANGUAGE } from '../helpers/actions'\r\nimport ExperienceCalculator from './ExperienceCalculator'\r\n\r\nclass App extends React.Component {\r\n  componentWillMount() {\r\n    if (this.props.languageCode === Japanese) {\r\n      this.props.changeLanguage(Japanese)\r\n    }\r\n  }\r\n\r\n  handleTabSelect = (tabKey) => {\r\n    ReactGA.modalview(tabKey)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-md-3\">\r\n        <Tabs defaultActiveKey=\"spark\" onSelect={this.handleTabSelect}>\r\n          <Tab eventKey=\"spark\" title={strings.SparkCalc}>\r\n            <SparkCalculator language={this.props.languageCode} />\r\n          </Tab>\r\n          <Tab eventKey=\"exp\" title={strings.ExpRpCalc}>\r\n            <ExperienceCalculator language={this.props.languageCode} />\r\n          </Tab>\r\n          <Tab eventKey=\"settings\" title=\"Settings/設定\">\r\n            <Settings />\r\n          </Tab>\r\n        </Tabs>\r\n        <GithubCorner\r\n          href=\"https://github.com/eurea/eurea.github.io\"\r\n          bannerColor=\"#0288D1\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({\r\n  languageCode: state.languageCode\r\n}), (dispatch) => ({\r\n  changeLanguage: (language) => dispatch({ type: SET_LANGUAGE, payload: language })\r\n}))(App)\r\n","import React from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'bootstrap/scss/bootstrap.scss'\r\nimport './index.scss'\r\nimport getDefaultState from './helpers/dataMigration'\r\nimport App from './components/App'\r\nimport rootReducer from './reducers'\r\n\r\nconst persistedState = localStorage.getItem('reduxState')\r\n  ? JSON.parse(localStorage.getItem('reduxState'))\r\n  : getDefaultState()\r\nconst store = createStore(rootReducer,\r\n  persistedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nstore.subscribe(() => {\r\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\r\n})\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n)\r\nReactDOM.render(app, document.getElementById('root'))\r\nReactGA.initialize('UA-101216558-2')\r\nReactGA.pageview(window.location.pathname)\r\nserviceWorker.register()\r\n","export default function () {\r\n  const newState = {\r\n    languageCode: localStorage.getItem('lang') || 'en',\r\n    crystals: localStorage.getItem('crystals') || 0,\r\n    singleTickets: localStorage.getItem('singles') || 0,\r\n    grandTickets: localStorage.getItem('tens') || 0\r\n  }\r\n  localStorage.clear()\r\n\r\n  return newState\r\n}\r\n","import { SET_SPARK_DATA, SET_LANGUAGE } from '../helpers/actions'\r\nimport strings from '../helpers/localization'\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_SPARK_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n    case SET_LANGUAGE: {\r\n      strings.setLanguage(action.payload)\r\n      return {\r\n        ...state,\r\n        languageCode: action.payload\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/info-filled.e1681639.svg\";"],"sourceRoot":""}